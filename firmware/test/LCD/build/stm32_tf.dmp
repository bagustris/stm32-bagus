
build/stm32_tf.elf:     file format elf32-littlearm
build/stm32_tf.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080002b1

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00002864 memsz 0x00002868 flags rwx
    LOAD off    0x00010400 vaddr 0x20000400 paddr 0x08002868 align 2**15
         filesz 0x0000044c memsz 0x0000044c flags rw-
    LOAD off    0x00010850 vaddr 0x20000850 paddr 0x08002cb4 align 2**15
         filesz 0x00000000 memsz 0x00000334 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000400 flags rw-
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002774  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  08002864  08002864  0000a864  2**0
                  ALLOC
  3 .stacks       00000400  20000000  20000000  00018000  2**0
                  ALLOC
  4 .data         0000044c  20000400  08002868  00010400  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000334  20000850  08002cb4  00010850  2**3
                  ALLOC
  6 .debug_info   0000e9d3  00000000  00000000  0001084c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003def  00000000  00000000  0001f21f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000415a  00000000  00000000  0002300e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000820  00000000  00000000  00027168  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000d68  00000000  00000000  00027988  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00003ee6  00000000  00000000  000286f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00002030  00000000  00000000  0002c5d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      0000001f  00000000  00000000  0002e606  2**0
                  CONTENTS, READONLY
 14 .ARM.attributes 00000031  00000000  00000000  0002e625  2**0
                  CONTENTS, READONLY
 15 .debug_frame  00001230  00000000  00000000  0002e658  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
08002864 l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000400 l    d  .data	00000000 .data
20000850 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 main.c
08001fd0 l     F .text	00000048 Lcd_Write_Command
08002020 l     F .text	0000003a Thread1
08002060 l     F .text	0000001e chprintf
08002080 l     F .text	0000001c cmd_test
080020a0 l     F .text	00000074 cmd_lcd
08002180 l     F .text	0000000c put
08002690 l     O .text	00000018 commands
20000a90 l     O .bss	000000f0 waThread1
08002730 l     O .text	00000008 shell_cfg1
08002740 l     O .text	00000010 vmt
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
08000404 l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000850 l     O .bss	00000048 mainthread.4794
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000740 l     F .text	00000070 wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08000df0 l     F .text	00000030 qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000984 l     O .bss	00000004 endmem
20000988 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
20000990 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 serial.c
080012c0 l     F .text	00000006 readt
080012d0 l     F .text	0000000a read
080012e0 l     F .text	00000006 writet
080012f0 l     F .text	0000000a write
08001300 l     F .text	00000006 gett
08001310 l     F .text	0000000a get
08001320 l     F .text	00000006 putt
08001330 l     F .text	0000000a put
08002400 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 tm.c
08001400 l     F .text	0000000e tm_start
08001410 l     F .text	00000036 tm_stop
200009b0 l     O .bss	00000004 measurement_offset
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 pal_lld.c
08002420 l     O .text	00000012 cfgtab.6059
00000000 l    df *ABS*	00000000 serial_lld.c
080016b0 l     F .text	00000014 notify1
08002440 l     O .text	0000000c default_config
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 chprintf.c
080018b0 l     F .text	0000004a long_to_string_with_divisor.constprop.0
00000000 l    df *ABS*	00000000 shell.c
08001b60 l     F .text	0000001e chprintf
08001b80 l     F .text	0000002e cmd_systime
08001bb0 l     F .text	000000e8 cmd_info
08001ca0 l     F .text	00000048 _strtok.constprop.2
08001df0 l     F .text	000001de shell_thread
20000400 l     O .data	00000018 local_commands
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strpbrk.c
00000000 l    df *ABS*	00000000 strspn.c
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
20000420 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 
08002868 l       .stacks	00000000 _etext
00001000 l       *ABS*	00000000 __ram_size__
00000000 l       startup	00000000 _text
20000000 l       startup	00000000 __ram_start__
20001000 l       *ABS*	00000000 __ram_end__
20000b84 l       .bss	00000000 _end
00000200 l       *ABS*	00000000 __main_stack_size__
00000200 l       *ABS*	00000000 __process_stack_size__
08002450 g     O .text	0000003c pal_default_config
080003f0  w    F .text	00000002 Vector58
080003f0  w    F .text	00000002 VectorE8
080003f0  w    F .text	00000002 Vector9C
08000530 g     F .text	00000046 nvicEnableVector
080003f0  w    F .text	00000002 VectorAC
08000b80 g     F .text	0000000a chThdExit
08000640 g     F .text	00000064 chSysTimerHandlerI
08000dc0 g     F .text	00000022 chEvtBroadcastFlagsI
08000830 g     F .text	0000004e chSchGoSleepTimeoutS
08000c30 g     F .text	000000c8 chMtxLockS
080003f0  w    F .text	00000002 Vector5C
080003f0  w    F .text	00000002 NMIVector
080011d0 g     F .text	00000092 chHeapFree
080003f0  w    F .text	00000002 Vector8C
080003f0  w    F .text	00000002 VectorDC
08000000 g     O startup	000000ec _vectors
08000800 g     F .text	00000028 chSchGoSleepS
20000b84 g       .bss	00000000 __heap_base__
08000a00 g     F .text	0000007c chThdCreateI
080003f0  w    F .text	00000002 VectorC8
08000880 g     F .text	0000006a chSchWakeupS
080013c0 g     F .text	0000003c sdIncomingDataI
08000fe0 g     F .text	00000046 chOQGetI
080007b0 g     F .text	00000016 _scheduler_init
08000a80 g     F .text	0000008a chThdCreateStatic
080003f0  w    F .text	00000002 Vector94
080003f0  w    F .text	00000002 VectorA8
080003f0  w    F .text	00000002 VectorB4
080007d0 g     F .text	0000002c chSchReadyI
080000ec g       startup	00000000 __fini_array_end
20000400 g       .stacks	00000000 __main_thread_stack_end__
080006b0 g     F .text	00000018 _vt_init
08001120 g     F .text	00000020 _heap_init
080003f0  w    F .text	00000002 Vector74
08001290 g     F .text	00000022 halInit
20000850 g       .bss	00000000 _bss_start
080008f0 g     F .text	00000042 chSchDoRescheduleBehind
080003f0  w    F .text	00000002 UsageFaultVector
20001000 g       *ABS*	00000000 __heap_end__
080003f0  w    F .text	00000002 DebugMonitorVector
08000be0 g     F .text	0000003c chThdCreateFromHeap
080003f0  w    F .text	00000002 Vector40
080002b0 g     F .text	00000134 ResetHandler
08000ee0 g     F .text	00000078 chIQReadTimeout
080003f0  w    F .text	00000002 VectorBC
08000430 g     F .text	00000034 _port_init
080014a0 g     F .text	00000074 hal_lld_init
08000b30 g     F .text	00000042 chThdExitS
20000a8c g     O .bss	00000004 shell_terminated
08001900 g     F .text	0000025c chvprintf
20000b80 g     O .bss	00000004 myLCD
08001cf0 g     F .text	0000000c shellInit
080003f0  w    F .text	00000002 PendSVVector
080023b0 g     F .text	0000001a strtol
080006d0 g     F .text	0000003c chVTSetI
080003f0  w    F .text	00000002 Vector64
20000b84 g       .bss	00000000 _bss_end
080002a0  w    F .text	00000002 _default_exit
08001640 g     F .text	00000068 _pal_lld_setgroupmode
080003f0  w    F .text	00000002 VectorCC
080017e0 g     F .text	00000028 sd_lld_init
080003f0  w    F .text	00000002 Vector54
080003f0  w    F .text	00000002 Vector98
080003f0  w    F .text	00000002 VectorD8
08002120 g     F .text	0000005a Lcd_Write_Data
080003f0  w    F .text	00000002 Vector24
08000d00 g     F .text	00000014 chMtxLock
08000980 g     F .text	00000016 chSchDoReschedule
080005d0 g     F .text	00000070 chSysInit
08000b10 g     F .text	00000018 chThdSleep
08000e20 g     F .text	0000001e chIQInit
080003f0  w    F .text	00000002 Vector84
080004f0 g     F .text	0000001a SysTickVector
08001520 g     F .text	0000009e stm32_clock_init
080015c0 g     F .text	0000007c _pal_lld_init
08001340 g     F .text	00000004 sdInit
080003f0  w    F .text	00000002 BusFaultVector
080003f0  w    F .text	00000002 VectorD0
080010b0 g     F .text	0000002c _core_init
080013a0 g     F .text	0000001a sdStart
080003f0  w    F .text	00000002 VectorE4
080003f0  w    F .text	00000002 VectorC0
08000510 g     F .text	00000010 _port_switch
08000410 g     F .text	00000012 SVCallVector
080021a0 g     F .text	00000046 strcasecmp
08000290  w    F .text	00000002 __late_init
20000958 g     O .bss	00000010 vtlist
080003f0  w    F .text	00000002 HardFaultVector
08000470 g     F .text	0000007c _port_irq_epilogue
080010e0 g     F .text	00000036 chCoreAlloc
08001d30 g     F .text	0000001a shellCreate
08001140 g     F .text	00000086 chHeapAlloc
08002868 g       .stacks	00000000 _textdata
080003f0  w    F .text	00000002 VectorE0
080003f0  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
080000f0 g     F .text	0000019a main
080003f0  w    F .text	00000002 Vector6C
20000968 g     O .bss	0000001c rlist
080003f0  w    F .text	00000002 VectorA0
08002280 g     F .text	00000124 _strtol_r
080000ec g       startup	00000000 __init_array_end
080003f0  w    F .text	00000002 VectorC4
080003f0  w    F .text	00000002 Vector7C
08000c20 g     F .text	0000000a chMtxInit
080005b0 g     F .text	00000016 _idle_thread
08001030 g     F .text	00000076 chOQWriteTimeout
080003f0  w    F .text	00000002 VectorB0
080023e0 g     O .text	00000016 ch_debug
080003f0  w    F .text	00000002 Vector90
08000d90 g     F .text	0000002e chEvtSignalI
08000520 g     F .text	00000010 _port_thread_start
080003f0  w    F .text	00000002 Vector60
080003f0  w    F .text	00000002 Vector1C
08000940 g     F .text	0000003e chSchDoRescheduleAhead
080003f0  w    F .text	00000002 Vector48
20000200 g       .stacks	00000000 __process_stack_base__
20000848 g     O .data	00000004 _impure_ptr
080003f0  w    F .text	00000002 Vector70
080016d0 g     F .text	00000104 VectorD4
08000580 g     F .text	00000024 nvicSetSystemHandlerPriority
08001d50 g     F .text	000000a0 shellGetLine
08000b90 g     F .text	0000004e chThdRelease
20000898 g     O .bss	000000c0 _idle_thread_wa
08000f60 g     F .text	0000001c chOQInit
08000e90 g     F .text	00000050 chIQGetTimeout
20000400 g       .data	00000000 _data
08001270 g     F .text	00000014 chPoolFree
080003f0  w    F .text	00000002 Vector4C
080003f0  w    F .text	00000002 Vector80
08000e40 g     F .text	00000050 chIQPutI
08000400 g     F .text	00000006 _port_switch_from_isr
08001450 g     F .text	00000046 tmInit
080003f0  w    F .text	00000002 Vector68
08000d20 g     F .text	00000066 chMtxUnlock
20000200 g       .stacks	00000000 __main_stack_end__
080003f0  w    F .text	00000002 Vector78
2000084c g       .data	00000000 _edata
08000710 g     F .text	00000024 chVTResetI
080003f0 g     F .text	00000002 _unhandled_exception
08001d00 g     F .text	00000022 shellExit
08001350 g     F .text	00000042 sdObjectInit
080003f0  w    F .text	00000002 Vector88
20000200 g       .stacks	00000000 __main_thread_stack_base__
20000418 g     O .data	00000004 __ctype_ptr__
08002190 g     F .text	00000008 atoi
08002750 g     O .text	00000101 _ctype_
080000ec g       startup	00000000 __init_array_start
200009b4 g     O .bss	000000d8 SD1
08002240 g     F .text	0000003e strspn
080009a0 g     F .text	00000052 _thread_init
080003f0  w    F .text	00000002 Vector50
08000f80 g     F .text	00000054 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
080003f0  w    F .text	00000002 Vector44
080003f0  w    F .text	00000002 Vector28
080018a0 g     F .text	00000010 boardInit
080003f0  w    F .text	00000002 VectorB8
08001810 g     F .text	00000080 sd_lld_start
20000400 g       .stacks	00000000 __process_stack_end__
080003f0  w    F .text	00000002 Vector34
08001890 g     F .text	00000004 __early_init
080003f0  w    F .text	00000002 VectorA4
080021f0 g     F .text	00000050 strpbrk
080003f0  w    F .text	00000002 Vector20


