
build/stm32_tf.elf:     file format elf32-littlearm
build/stm32_tf.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080002d1

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x000026c4 memsz 0x000026c8 flags rwx
    LOAD off    0x00010400 vaddr 0x20000400 paddr 0x080026c8 align 2**15
         filesz 0x0000044c memsz 0x0000044c flags rw-
    LOAD off    0x00010850 vaddr 0x20000850 paddr 0x08002b14 align 2**15
         filesz 0x00000000 memsz 0x00000424 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000400 flags rw-
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000025d4  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  080026c4  080026c4  0000a6c4  2**0
                  ALLOC
  3 .stacks       00000400  20000000  20000000  00018000  2**0
                  ALLOC
  4 .data         0000044c  20000400  080026c8  00010400  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000424  20000850  08002b14  00010850  2**3
                  ALLOC
  6 .debug_info   0000eb17  00000000  00000000  0001084c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003e29  00000000  00000000  0001f363  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00004540  00000000  00000000  0002318c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000828  00000000  00000000  000276cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000d70  00000000  00000000  00027ef4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00004020  00000000  00000000  00028c64  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000020d7  00000000  00000000  0002cc84  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      0000002b  00000000  00000000  0002ed5b  2**0
                  CONTENTS, READONLY
 14 .ARM.attributes 00000031  00000000  00000000  0002ed86  2**0
                  CONTENTS, READONLY
 15 .debug_frame  00001248  00000000  00000000  0002edb8  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
080026c4 l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000400 l    d  .data	00000000 .data
20000850 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 main.c
08001df0 l     F .text	00000044 Lcd_Write_Command
08001e40 l     F .text	00000034 Thread1
08001e80 l     F .text	0000004c Thread2
08001ed0 l     F .text	0000001e chprintf
08001ef0 l     F .text	00000018 cmd_test
08001f10 l     F .text	0000005c cmd_lcd
08001fd0 l     F .text	0000000c put
080024e0 l     O .text	00000018 commands
20000a90 l     O .bss	000000f0 waThread1
20000b80 l     O .bss	000000f0 waThread2
08002590 l     O .text	00000008 shell_cfg1
080025a0 l     O .text	00000010 vmt
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
080003e4 l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000850 l     O .bss	00000048 mainthread.4797
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
080006e0 l     F .text	00000070 wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08000d50 l     F .text	00000030 qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000984 l     O .bss	00000004 endmem
20000988 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
20000990 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 serial.c
08001200 l     F .text	00000006 readt
08001210 l     F .text	0000000a read
08001220 l     F .text	00000006 writet
08001230 l     F .text	0000000a write
08001240 l     F .text	00000006 gett
08001250 l     F .text	0000000a get
08001260 l     F .text	00000006 putt
08001270 l     F .text	0000000a put
08002240 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 tm.c
08001330 l     F .text	0000000c tm_start
08001340 l     F .text	0000002c tm_stop
200009b0 l     O .bss	00000004 measurement_offset
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 pal_lld.c
08002260 l     O .text	00000012 cfgtab.6062
00000000 l    df *ABS*	00000000 serial_lld.c
08001590 l     F .text	00000014 notify1
08002280 l     O .text	0000000c default_config
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 chprintf.c
08001780 l     F .text	0000004a long_to_string_with_divisor.constprop.0
00000000 l    df *ABS*	00000000 shell.c
08001a10 l     F .text	0000001e chprintf
08001a30 l     F .text	00000028 cmd_systime
08001a60 l     F .text	000000c0 cmd_info
08001b20 l     F .text	00000040 _strtok.constprop.2
08001c50 l     F .text	00000198 shell_thread
20000400 l     O .data	00000018 local_commands
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strpbrk.c
00000000 l    df *ABS*	00000000 strspn.c
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
20000420 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 
080026c8 l       .stacks	00000000 _etext
00001000 l       *ABS*	00000000 __ram_size__
00000000 l       startup	00000000 _text
20000000 l       startup	00000000 __ram_start__
20001000 l       *ABS*	00000000 __ram_end__
20000c74 l       .bss	00000000 _end
00000200 l       *ABS*	00000000 __main_stack_size__
00000200 l       *ABS*	00000000 __process_stack_size__
08002290 g     O .text	0000003c pal_default_config
080003d0  w    F .text	00000002 Vector58
080003d0  w    F .text	00000002 VectorE8
080003d0  w    F .text	00000002 Vector9C
080004f0 g     F .text	00000046 nvicEnableVector
080003d0  w    F .text	00000002 VectorAC
08000ae0 g     F .text	0000000a chThdExit
080005f0 g     F .text	00000058 chSysTimerHandlerI
08000d20 g     F .text	00000022 chEvtBroadcastFlagsI
080007d0 g     F .text	00000044 chSchGoSleepTimeoutS
08000b90 g     F .text	000000c8 chMtxLockS
080003d0  w    F .text	00000002 Vector5C
080003d0  w    F .text	00000002 NMIVector
08001120 g     F .text	00000092 chHeapFree
080003d0  w    F .text	00000002 Vector8C
080003d0  w    F .text	00000002 VectorDC
08000000 g     O startup	000000ec _vectors
080007a0 g     F .text	00000028 chSchGoSleepS
20000c74 g       .bss	00000000 __heap_base__
08000970 g     F .text	00000074 chThdCreateI
080003d0  w    F .text	00000002 VectorC8
08000820 g     F .text	00000060 chSchWakeupS
080012f0 g     F .text	0000003c sdIncomingDataI
08000f40 g     F .text	00000046 chOQGetI
08000750 g     F .text	00000014 _scheduler_init
080009f0 g     F .text	00000088 chThdCreateStatic
080003d0  w    F .text	00000002 Vector94
080003d0  w    F .text	00000002 VectorA8
080003d0  w    F .text	00000002 VectorB4
08000770 g     F .text	0000002c chSchReadyI
080000ec g       startup	00000000 __fini_array_end
20000400 g       .stacks	00000000 __main_thread_stack_end__
08000650 g     F .text	00000018 _vt_init
08001080 g     F .text	0000001c _heap_init
080003d0  w    F .text	00000002 Vector74
080011e0 g     F .text	00000020 halInit
20000850 g       .bss	00000000 _bss_start
08000880 g     F .text	00000040 chSchDoRescheduleBehind
080003d0  w    F .text	00000002 UsageFaultVector
20001000 g       *ABS*	00000000 __heap_end__
080003d0  w    F .text	00000002 DebugMonitorVector
08000b40 g     F .text	0000003c chThdCreateFromHeap
080003d0  w    F .text	00000002 Vector40
080002d0 g     F .text	000000fc ResetHandler
08000e40 g     F .text	00000078 chIQReadTimeout
080003d0  w    F .text	00000002 VectorBC
08000410 g     F .text	00000030 _port_init
080013b0 g     F .text	0000006c hal_lld_init
08000aa0 g     F .text	00000040 chThdExitS
20000a8c g     O .bss	00000004 shell_terminated
080017d0 g     F .text	00000240 chvprintf
20000c70 g     O .bss	00000004 myLCD
08001b60 g     F .text	0000000c shellInit
080003d0  w    F .text	00000002 PendSVVector
080021f0 g     F .text	00000018 strtol
08000670 g     F .text	00000038 chVTSetI
080003d0  w    F .text	00000002 Vector64
20000c74 g       .bss	00000000 _bss_end
080002c0  w    F .text	00000002 _default_exit
08001520 g     F .text	00000068 _pal_lld_setgroupmode
080003d0  w    F .text	00000002 VectorCC
080016b0 g     F .text	00000024 sd_lld_init
080003d0  w    F .text	00000002 Vector54
080003d0  w    F .text	00000002 Vector98
080003d0  w    F .text	00000002 VectorD8
08001f70 g     F .text	00000058 Lcd_Write_Data
080003d0  w    F .text	00000002 Vector24
08000c60 g     F .text	00000014 chMtxLock
08000900 g     F .text	00000014 chSchDoReschedule
08000590 g     F .text	0000005c chSysInit
08000a80 g     F .text	00000018 chThdSleep
08000d80 g     F .text	0000001e chIQInit
080003d0  w    F .text	00000002 Vector84
080004b0 g     F .text	0000001a SysTickVector
08001420 g     F .text	00000084 stm32_clock_init
080014b0 g     F .text	0000006c _pal_lld_init
08001280 g     F .text	00000004 sdInit
080003d0  w    F .text	00000002 BusFaultVector
080003d0  w    F .text	00000002 VectorD0
08001010 g     F .text	00000028 _core_init
080012d0 g     F .text	0000001a sdStart
080003d0  w    F .text	00000002 VectorE4
080003d0  w    F .text	00000002 VectorC0
080004d0 g     F .text	00000010 _port_switch
080003f0 g     F .text	00000012 SVCallVector
08001ff0 g     F .text	00000044 strcasecmp
080002b0  w    F .text	00000002 __late_init
20000958 g     O .bss	00000010 vtlist
080003d0  w    F .text	00000002 HardFaultVector
08000440 g     F .text	00000070 _port_irq_epilogue
08001040 g     F .text	00000034 chCoreAlloc
08001b90 g     F .text	00000018 shellCreate
080010a0 g     F .text	00000080 chHeapAlloc
080026c8 g       .stacks	00000000 _textdata
080003d0  w    F .text	00000002 VectorE0
080003d0  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
080000f0 g     F .text	000001b8 main
080003d0  w    F .text	00000002 Vector6C
20000968 g     O .bss	0000001c rlist
080003d0  w    F .text	00000002 VectorA0
080020d0 g     F .text	00000114 _strtol_r
080000ec g       startup	00000000 __init_array_end
080003d0  w    F .text	00000002 VectorC4
080003d0  w    F .text	00000002 Vector7C
08000b80 g     F .text	0000000a chMtxInit
08000570 g     F .text	00000014 _idle_thread
08000f90 g     F .text	00000076 chOQWriteTimeout
080003d0  w    F .text	00000002 VectorB0
08002220 g     O .text	00000016 ch_debug
080003d0  w    F .text	00000002 Vector90
08000cf0 g     F .text	0000002e chEvtSignalI
080004e0 g     F .text	00000010 _port_thread_start
080003d0  w    F .text	00000002 Vector60
080003d0  w    F .text	00000002 Vector1C
080008c0 g     F .text	0000003c chSchDoRescheduleAhead
080003d0  w    F .text	00000002 Vector48
20000200 g       .stacks	00000000 __process_stack_base__
20000848 g     O .data	00000004 _impure_ptr
080003d0  w    F .text	00000002 Vector70
080015b0 g     F .text	000000f8 VectorD4
08000540 g     F .text	00000024 nvicSetSystemHandlerPriority
08001bb0 g     F .text	0000009c shellGetLine
08000af0 g     F .text	0000004e chThdRelease
20000898 g     O .bss	000000c0 _idle_thread_wa
08000ec0 g     F .text	0000001c chOQInit
08000df0 g     F .text	00000050 chIQGetTimeout
20000400 g       .data	00000000 _data
080011c0 g     F .text	00000014 chPoolFree
080003d0  w    F .text	00000002 Vector4C
080003d0  w    F .text	00000002 Vector80
08000da0 g     F .text	00000050 chIQPutI
080003e0 g     F .text	00000006 _port_switch_from_isr
08001370 g     F .text	00000040 tmInit
080003d0  w    F .text	00000002 Vector68
08000c80 g     F .text	00000064 chMtxUnlock
20000200 g       .stacks	00000000 __main_stack_end__
080003d0  w    F .text	00000002 Vector78
2000084c g       .data	00000000 _edata
080006b0 g     F .text	00000024 chVTResetI
080003d0 g     F .text	00000002 _unhandled_exception
08001b70 g     F .text	00000020 shellExit
08001290 g     F .text	00000040 sdObjectInit
080003d0  w    F .text	00000002 Vector88
20000200 g       .stacks	00000000 __main_thread_stack_base__
20000418 g     O .data	00000004 __ctype_ptr__
08001fe0 g     F .text	00000008 atoi
080025b0 g     O .text	00000101 _ctype_
080000ec g       startup	00000000 __init_array_start
200009b4 g     O .bss	000000d8 SD1
08002090 g     F .text	0000003e strspn
08000920 g     F .text	00000050 _thread_init
080003d0  w    F .text	00000002 Vector50
08000ee0 g     F .text	00000054 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
080003d0  w    F .text	00000002 Vector44
080003d0  w    F .text	00000002 Vector28
08001770 g     F .text	00000010 boardInit
080003d0  w    F .text	00000002 VectorB8
080016e0 g     F .text	00000078 sd_lld_start
20000400 g       .stacks	00000000 __process_stack_end__
080003d0  w    F .text	00000002 Vector34
08001760 g     F .text	00000004 __early_init
080003d0  w    F .text	00000002 VectorA4
08002040 g     F .text	00000050 strpbrk
080003d0  w    F .text	00000002 Vector20


